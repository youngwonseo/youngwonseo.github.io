<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-06-20T23:07:57+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Youngwon Seo</title><author><name>Youngwon Seo</name><email>jazz9008@gmail.com</email></author><entry><title type="html">금융데이터 활용하기</title><link href="http://localhost:4000/2020/05/30/memo/" rel="alternate" type="text/html" title="금융데이터 활용하기" /><published>2020-05-30T00:00:00+09:00</published><updated>2020-05-30T00:00:00+09:00</updated><id>http://localhost:4000/2020/05/30/memo</id><content type="html" xml:base="http://localhost:4000/2020/05/30/memo/">&lt;h2 id=&quot;1-데이터-수집&quot;&gt;1. 데이터 수집&lt;/h2&gt;

&lt;h3 id=&quot;해외-pandas-datareader&quot;&gt;해외 (pandas-datareader)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;해외주가 - tiingo&lt;/li&gt;
  &lt;li&gt;주가 지수(코스피, 나스닥 등) - Stooq&lt;/li&gt;
  &lt;li&gt;환율 - Alpha Vanatage&lt;/li&gt;
  &lt;li&gt;원자재 가격 - FRED&lt;/li&gt;
  &lt;li&gt;그 외 경제지표
    &lt;ul&gt;
      &lt;li&gt;90개 이상 공식적 통계 기관 경제 데이터 - Econdb&lt;/li&gt;
      &lt;li&gt;세인트루이스 연방준비은행에서 제공하는 주요 경제 지표 - Fred&lt;/li&gt;
      &lt;li&gt;세계 은행에서 제공하는 경제 지표 - World Bank&lt;/li&gt;
      &lt;li&gt;OECD 국가 통계 자료 - OECD&lt;/li&gt;
      &lt;li&gt;Enigma&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;국내-finance-datareader&quot;&gt;국내 (finance-datareader)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;pip install finance-datareader&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;open-api&quot;&gt;OPEN API&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;국가 재정&lt;/li&gt;
  &lt;li&gt;인구/가구&lt;/li&gt;
  &lt;li&gt;경기/기업 경영&lt;/li&gt;
  &lt;li&gt;국토 관리&lt;/li&gt;
  &lt;li&gt;물가/가계&lt;/li&gt;
  &lt;li&gt;금리/환율&lt;/li&gt;
  &lt;li&gt;주식/채권&lt;/li&gt;
  &lt;li&gt;무역/국제 수지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;크롤링&quot;&gt;크롤링&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;urlopen, BeautifulSoup&lt;/li&gt;
  &lt;li&gt;requests&lt;/li&gt;
  &lt;li&gt;기업재무정보 - http://comp.fnguide.com/&lt;/li&gt;
  &lt;li&gt;pip install selenium&lt;/li&gt;
  &lt;li&gt;증권 정보 포털 - SEIBro
    &lt;ul&gt;
      &lt;li&gt;법인만 API제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실제-데이터-수집&quot;&gt;실제 데이터 수집&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;scrapy 프로젝트를 생성하여 수집&lt;/li&gt;
  &lt;li&gt;주요 경제 지표 수집하기
    &lt;ul&gt;
      &lt;li&gt;한국은행 OpenAPI - https://ecos.or.kr&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주가 정보 수집하기
    &lt;ul&gt;
      &lt;li&gt;FinanceDataReader 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;재무재표 데이터 수집하기
    &lt;ul&gt;
      &lt;li&gt;OPEN DART - opendart.fss.or.kr&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-금융-데이터-분석하기&quot;&gt;2. 금융 데이터 분석하기&lt;/h2&gt;

&lt;h3 id=&quot;데이터-정리하기&quot;&gt;데이터 정리하기&lt;/h3&gt;

&lt;h3 id=&quot;데이터-시각화-및-분석하기&quot;&gt;데이터 시각화 및 분석하기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;matplotlib&lt;/li&gt;
  &lt;li&gt;seaborn&lt;/li&gt;
  &lt;li&gt;tip, interactc
    &lt;ul&gt;
      &lt;li&gt;jupyter notebook interaction&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데이터-프레젠테이션하기&quot;&gt;데이터 프레젠테이션하기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;flask, dash를 사용한 대시보드 만들기
    &lt;ul&gt;
      &lt;li&gt;https://dash.plotly.com&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-금융-데이터-활용하기&quot;&gt;3. 금융 데이터 활용하기&lt;/h2&gt;

&lt;h3 id=&quot;인구-통계&quot;&gt;인구 통계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;국가통계포털 : http://kosis.kr&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;유동성과-주가-부동산-가격-비교하기&quot;&gt;유동성과 주가, 부동산 가격 비교하기&lt;/h3&gt;

&lt;h3 id=&quot;주요-각국의-기준-금리-비교하기&quot;&gt;주요 각국의 기준 금리 비교하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;https://global-rates.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;금융-대시보드-만들기&quot;&gt;금융 대시보드 만들기&lt;/h3&gt;

&lt;h3 id=&quot;매매가-대비-전세가-높은-아파트-찾아보기&quot;&gt;매매가 대비 전세가 높은 아파트 찾아보기&lt;/h3&gt;

&lt;h3 id=&quot;강남역에서-가까운-아파트-찾아보기&quot;&gt;강남역에서 가까운 아파트 찾아보기&lt;/h3&gt;

&lt;h3 id=&quot;배당-수익률이-높은-주식-찾아보기&quot;&gt;배당 수익률이 높은 주식 찾아보기&lt;/h3&gt;

&lt;h3 id=&quot;퀀트-투자-따라-하기&quot;&gt;퀀트 투자 따라 하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;zipline
    &lt;ul&gt;
      &lt;li&gt;quandl.com&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;미국 주식 투자 백 테스트&lt;/li&gt;
  &lt;li&gt;한국 주식 투자 백 테스트&lt;/li&gt;
  &lt;li&gt;볼린저 밴드를 이용한 투자 방법 평가하기&lt;/li&gt;
  &lt;li&gt;pyfolio로 투자 방법 비교하기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;refereces&quot;&gt;Refereces&lt;/h1&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">1. 데이터 수집</summary></entry><entry><title type="html">AI for Medical Diagnosis - Week3</title><link href="http://localhost:4000/2020/04/26/01-week3/" rel="alternate" type="text/html" title="AI for Medical Diagnosis - Week3" /><published>2020-04-26T00:00:00+09:00</published><updated>2020-04-26T00:00:00+09:00</updated><id>http://localhost:4000/2020/04/26/01-week3</id><content type="html" xml:base="http://localhost:4000/2020/04/26/01-week3/">&lt;p&gt;Image segmentation on MRI images&lt;/p&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Perform image segmentation on 3D MRI data.&lt;/li&gt;
  &lt;li&gt;Take random sub-samples from a 3D image.&lt;/li&gt;
  &lt;li&gt;Standardize an input image.&lt;/li&gt;
  &lt;li&gt;Apply a pre-trained U-Net model.&lt;/li&gt;
  &lt;li&gt;Implement a proper loss function for model training (soft dice loss).&lt;/li&gt;
  &lt;li&gt;Evaluate model performance by calculating sensitivity and specificity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Medical Image Segmentation
이미지에서 질병의 유무뿐만 아니라 질병이 발생한 위치를 탐지하는것&lt;/p&gt;

&lt;p&gt;MRI 데이터로 부터 종양을 segmentation&lt;/p&gt;

&lt;p&gt;MRI 데이터는 sequence로 구성됨 (axial view), 3D Volume을 구성&lt;/p&gt;

&lt;p&gt;여러개의 3D Volume으로 구성될 경우 각 데이터의 slice부분을 이용해 Multi Channels 데이터로 구성
3개 channel일 경우 RGB로 구성
ㅇ
데이터의 align인 맞지 않을 경우 registration을 통해 보정&lt;/p&gt;

&lt;p&gt;2D Approach는 3D MRI Volume을 2D slice로 분리, 각 2d에 대한 segmentation을 실행&lt;/p&gt;

&lt;p&gt;2D Approach는 3D context에서 발견가능한 중요한 사항들을 잃음, 예로들면 인접한 부분(depth)에 종양이 있음&lt;/p&gt;

&lt;p&gt;3D Approach는 한번에 모델에 입력이 불가능한 경우가 존재
3MRI Volume을  sub 3d MRI Volumn으로 분리 (width, height, depth)
그러나 이경우 지역적 context를 잃음&lt;/p&gt;

&lt;p&gt;U-Net은 biomedical image segmentaion을 위한 첫번째 모델&lt;/p&gt;

&lt;p&gt;100개 정도의 샘플만 가지고도 좋은 결과를 보임&lt;/p&gt;

&lt;p&gt;Contraction Path와 Expading Path로 구분됨
Contraction Path:  down sampling
Expading Path : up sampling&lt;/p&gt;

&lt;p&gt;https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/
https://towardsdatascience.com/u-net-b229b32b4a71
https://arxiv.org/pdf/1505.04597.pdf&lt;/p&gt;

&lt;p&gt;Data Augmentation&lt;/p&gt;

&lt;p&gt;roate 90 degree&lt;/p&gt;

&lt;p&gt;Soft Dice Loss&lt;/p&gt;

&lt;p&gt;Practical considerations&lt;/p&gt;

&lt;p&gt;일반화하기 어려움 - 나라별로 발생하는 질병이 다름, 
MRI기술은 표준화되어 있지 않음, 병원마다 MRI데이터의 스캔기술이 다름&lt;/p&gt;

&lt;p&gt;Extenal validation
distribution이 다른 데이터들에 대한 테스트&lt;/p&gt;

&lt;p&gt;Retrospective data와 real-world 데이터의 타이&lt;/p&gt;

&lt;p&gt;Model Interpretation&lt;/p&gt;

&lt;p&gt;Course3
환자에 도움이 되는가
설명가능한 모델&lt;/p&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">Image segmentation on MRI images</summary></entry><entry><title type="html">AI for Medical Diagnosis - Week2</title><link href="http://localhost:4000/2020/04/25/01-week2/" rel="alternate" type="text/html" title="AI for Medical Diagnosis - Week2" /><published>2020-04-25T00:00:00+09:00</published><updated>2020-04-25T00:00:00+09:00</updated><id>http://localhost:4000/2020/04/25/01-week2</id><content type="html" xml:base="http://localhost:4000/2020/04/25/01-week2/">&lt;p&gt;Evaluating models&lt;/p&gt;

&lt;h2 id=&quot;2주차-key-concepts&quot;&gt;2주차 Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Calculate true positives, true negatives, false positives, false negatives.&lt;/li&gt;
  &lt;li&gt;Calculate sensitivity and specificity&lt;/li&gt;
  &lt;li&gt;Calculate Positive Predictive Value (PPV) and Negative Predictive Value (NPV).&lt;/li&gt;
  &lt;li&gt;Understand confidence intervals, ROC curve, and F1 score.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;의료 분야에서 진단에 대한 결정은 높은 영향력을 가집니다. 그래서 진단에 대한 딥러닝 모델을 개발시 모델에 대한 평가..&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;정확도 메트릭의 단점, sencitivity, specificity 정화도로 부터 의료 평가&lt;/li&gt;
  &lt;li&gt;의사들을 의사결정을 위한 예측 값&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;다음은 정확도를 조건부 확률로 해석하는 과정입니다. +는 positive, 즉 질병(disease)으로 결정, -는 negative 질병이 아닌(normal)으로 결정을 의미합니다.
&lt;img src=&quot;/public/medicine/01/week2-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Sensitivity : 질병일 경우 질병으로 예측할 확률, P(+&lt;/td&gt;
          &lt;td&gt;disease), (true positive rate)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Specificity : 질병이 아닐경우 질병이 아닌것으로 예측할 확률, P(-&lt;/td&gt;
          &lt;td&gt;normal), (true negative rate)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/public/medicine/01/week2-04.png&quot; alt=&quot;&quot; /&gt;
Sensitivity와 Specificity를 사용해 정확도를 다시 표현해 봅니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Prevalence : 질병이 발병할 학률, P(disease)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;질병이 아닌 확률은 P(1-prevalence), P(1 - P(disease))입니다.&lt;/p&gt;

&lt;p&gt;이것은 정확도를 sensitivity와 specificity의 가중치 평균으로 ..&lt;/p&gt;

&lt;p&gt;예제를 살펴보겠습니다.
&lt;img src=&quot;/public/medicine/01/week2-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Sensitivity : P(+&lt;/td&gt;
          &lt;td&gt;disease) = #(+ and disease) / #(disease) = 2/3 = 0.67&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Specificity : P(-&lt;/td&gt;
          &lt;td&gt;normal) = #(- and normal) / #(normal) = 6/7 = 0.86&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Prevalence : P(disease) = #(disease) / #(total) = 3/10 = 0.3&lt;/li&gt;
  &lt;li&gt;Accuracy : Sensitivity X prevalence + Specificity X (1 - prevalence) = 0.67 x 0.3 + 0.86 x 0.7 = 0.8&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;PPV(positive predictive value) : P(disease&lt;/td&gt;
      &lt;td&gt;+)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NPV(nagative predictive value) : P(normal&lt;/td&gt;
      &lt;td&gt;-)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/public/medicine/01/week2-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sensitivity, Specificity와 PPV, NPV의 관계를 Confusion matrix를 통해 알아니다.&lt;/p&gt;

&lt;p&gt;의료 모델에서 가장 유용한모델인 ROC curve에 대해 알아봅니다.&lt;/p&gt;

&lt;p&gt;이때 threshold가 0이면 sensitivity가 1,specificity 0&lt;/p&gt;

&lt;p&gt;threshold가 1이면 sensitivity가 0,specificity 1&lt;/p&gt;

&lt;p&gt;모델의 추정치에 대한 변동성
confidence intervals&lt;/p&gt;

&lt;p&gt;p는 population accuracy&lt;/p&gt;

&lt;p&gt;p에 대한 모델 학습은 불가능&lt;/p&gt;

&lt;p&gt;lower bound
upper bound&lt;/p&gt;

&lt;p&gt;confidence를 통해 confidence interval을 계산, population accuracy의 정확도를 유추
모델의 성능을 confidence intervals로 보고&lt;/p&gt;

&lt;p&gt;구간내에 있을 확률이 95% x
샘플 정확도의 95%가 구간내에 있을 확률  x&lt;/p&gt;

&lt;p&gt;Metrics&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;TP, TN, FP, FN&lt;/li&gt;
  &lt;li&gt;Accuracy&lt;/li&gt;
  &lt;li&gt;Prevalence&lt;/li&gt;
  &lt;li&gt;Sensitivity and Specificity&lt;/li&gt;
  &lt;li&gt;PPV and NPV&lt;/li&gt;
  &lt;li&gt;AUC
Confidence Intervals&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">Evaluating models</summary></entry><entry><title type="html">AI for Medical Diagnosis - Week1</title><link href="http://localhost:4000/2020/04/20/01-week1/" rel="alternate" type="text/html" title="AI for Medical Diagnosis - Week1" /><published>2020-04-20T00:00:00+09:00</published><updated>2020-04-20T00:00:00+09:00</updated><id>http://localhost:4000/2020/04/20/01-week1</id><content type="html" xml:base="http://localhost:4000/2020/04/20/01-week1/">&lt;p&gt;Disease detection with computer vision&lt;/p&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Data pre-processing: checking for data leakage&lt;/li&gt;
  &lt;li&gt;Preprocess images properly for the train, validation and test sets&lt;/li&gt;
  &lt;li&gt;Implement a weighted loss function to address class imbalance.&lt;/li&gt;
  &lt;li&gt;Set up a pre-trained neural network to make disease predictions on chest x-rays.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;https://www.kaggle.com/c/rsna-pneumonia-detection-challenge
https://www.kaggle.com/c/siim-acr-pneumothorax-segmentation
https://www.kaggle.com/c/rsna-intracranial-hemorrhage-detection&lt;/p&gt;

&lt;p&gt;준비&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;딥러닝에 대한 기본지식 - 지도학습, 합성곱신경망, 손실함수 등&lt;/li&gt;
  &lt;li&gt;파이썬 코딩 - 데이터 처리, 모델 생성 등&lt;/li&gt;
  &lt;li&gt;확률론에 대한 기본지식 - 조건부 확률&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;영상처리 기반 의료진단&lt;/p&gt;

&lt;p&gt;ChestX-ray8: Hospital-scale Chest X-ray Database and Benchmarks on Weakly-Supervised Classification and Localization of Common Thorax Diseases
https://arxiv.org/abs/1705.02315&lt;/p&gt;

&lt;p&gt;Densenet&lt;/p&gt;

&lt;p&gt;각 레이어가 그 다음의 모든 층의 레이어와 densely하게 연결된 CNN&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;첫 번째 레이어는 두 번째 뿐만 아니라 2, 3, .. 층까지 연결&lt;/li&gt;
  &lt;li&gt;두 번째 레이어는 세 번째 뿐만 아니라 4, 5, .. 층까지 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Patient Overlap and D&lt;/p&gt;

&lt;p&gt;set
intersection&lt;/p&gt;

&lt;p&gt;python list append, extend&lt;/p&gt;

&lt;p&gt;numpy axis&lt;/p&gt;</content><author><name>Youngwon Seo</name></author><category term="medical ai" /><category term="medical deep learning" /><category term="deeplearning.ai" /><category term="의료 인공지능" /><summary type="html">Disease detection with computer vision</summary></entry><entry><title type="html">텐서플로우 - 구조화된 데이터</title><link href="http://localhost:4000/2020/04/15/structured-data/" rel="alternate" type="text/html" title="텐서플로우 - 구조화된 데이터" /><published>2020-04-15T00:00:00+09:00</published><updated>2020-04-15T00:00:00+09:00</updated><id>http://localhost:4000/2020/04/15/structured-data</id><content type="html" xml:base="http://localhost:4000/2020/04/15/structured-data/">&lt;p&gt;본 글은 텐서플로우 공식 사이트의 &lt;a href=&quot;https://www.tensorflow.org/tutorials/structured_data/feature_columns&quot;&gt;구조화된 데이터&lt;/a&gt;를 정리한 글입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;특성 열(feature_columns)&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;텐서플로우에서 제공하는 특성 열 feature_columns의 종류&lt;/p&gt;

&lt;p&gt;numeric column
bucketized column
categorical column
embedding column&lt;/p&gt;

&lt;p&gt;categorical_column_with_hash_bucket
feature cross&lt;/p&gt;

&lt;p&gt;수치형일 경우 실제 데이터와는 독립적으로 feature의 이름(column의 이름)으로만으로 구성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이후 DenseFeatures를 통하여 모델에 주입&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;feature_layer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sigmoid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'adam'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'binary_crossentropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'accuracy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;validation_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val_ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">본 글은 텐서플로우 공식 사이트의 구조화된 데이터를 정리한 글입니다.</summary></entry><entry><title type="html">자바스크립트 - 기존 function과 화살표 함수에서의 This</title><link href="http://localhost:4000/2020/03/17/this/" rel="alternate" type="text/html" title="자바스크립트 - 기존 function과 화살표 함수에서의 This" /><published>2020-03-17T00:00:00+09:00</published><updated>2020-03-17T00:00:00+09:00</updated><id>http://localhost:4000/2020/03/17/this</id><content type="html" xml:base="http://localhost:4000/2020/03/17/this/">&lt;p&gt;ES6에서 존재하는 화살표함수와 기존의 function은 바인딩되는 this의 차이가 존재합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BlackDog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;흰둥이&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;검둥이&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;: 멍멍!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WhiteDog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;흰둥이&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;검둥이&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;: 멍멍!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BlackDog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//검둥이: 멍멍!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WhiteDog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//흰둥이: 멍멍!&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;function은 자신이 종속된 객체, 화살표 함수는 자신이 종속된 인스턴스를 가르킴&lt;/p&gt;

&lt;p&gt;중괄호가 없으면 바로 리턴을 의미&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">ES6에서 존재하는 화살표함수와 기존의 function은 바인딩되는 this의 차이가 존재합니다.</summary></entry><entry><title type="html">도커를 사용하여 컨테이너 기반으로 노드 실행</title><link href="http://localhost:4000/2020/03/09/docker-start-project/" rel="alternate" type="text/html" title="도커를 사용하여 컨테이너 기반으로 노드 실행" /><published>2020-03-09T00:00:00+09:00</published><updated>2020-03-09T00:00:00+09:00</updated><id>http://localhost:4000/2020/03/09/docker-start-project</id><content type="html" xml:base="http://localhost:4000/2020/03/09/docker-start-project/">&lt;h2 id=&quot;목표&quot;&gt;목표&lt;/h2&gt;
&lt;p&gt;도커를 사용하여 컨테이너 기반으로 노드 실행 및 접근&lt;/p&gt;

&lt;h2 id=&quot;단계&quot;&gt;단계&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;노드js 앱 생성&lt;/li&gt;
  &lt;li&gt;Dockerfile 생성&lt;/li&gt;
  &lt;li&gt;Dockerfile 빌드&lt;/li&gt;
  &lt;li&gt;컨테이너 이미지 실행&lt;/li&gt;
  &lt;li&gt;웹 브라우저에서 노드js 앱 접근&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-노드-앱-작성&quot;&gt;1. 노드 앱 작성&lt;/h2&gt;
&lt;p&gt;컨테이너 테스트용으로 express기반의 간단한 노드 앱을 작성합니다.&lt;/p&gt;

&lt;h3 id=&quot;packagejson&quot;&gt;package.json&lt;/h3&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;express&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;indexjs&quot;&gt;index.js&lt;/h3&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hi there&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Listening on port 8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-dockerfile-작성&quot;&gt;2. Dockerfile 작성&lt;/h2&gt;
&lt;h3 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h3&gt;
&lt;div class=&quot;language-docker highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# node 이미지, 버전은 alpine&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; node:alpine&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 컨테이너 내부의 경로 지정&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /usr/app&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 로컬의 package.json를 컨테이너(WORKDIR로 지정된 경로)로 복사&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ./package.json ./&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 컨테이너 내부에서 npm에 종속된 패키지들을 설치&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 현재 폴더에 존재하는 모든 파일 및 폴더를 컨테이너(WORKDIR로 지정된 경로)로 복사&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ./ ./&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 컨테이너 실행시 시작&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&quot;npm&quot;, &quot;start&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-빌드&quot;&gt;3. 빌드&lt;/h2&gt;
&lt;p&gt;Dockerfile이 존재하는 프로젝트 폴더 내부에서 다음의 명령어를 실행합니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;docker build -t youngwon/simpleweb .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Dockerfile을 build 할 경우 변경된 라인부터 실행(캐시)&lt;/strong&gt;되므로 package.json을 먼저 복사하고 나머지 소스파일들을 복사합니다. 만약 package.json 변경없이, 즉 종속성에 대한 변경은 없이 소스만 변경이 있을 경우 COPY ./ ./ 라인부터 실행됩니다.&lt;/p&gt;

&lt;h2 id=&quot;4-실행&quot;&gt;4. 실행&lt;/h2&gt;
&lt;p&gt;빌드후 컨데이터를 실행합니다. 이때 로컬의 포트와 컨테이너 내부의 포트를 매핑합니다. 만약 5000:8080으로 매필할 경우 로컬에서 5000으로 접근하면 컨테이너의 8080으로 접근이 가능합니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;docker run -p [local port]:[container port] [dockerid]/[project]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;5-웹브라우저로-접근&quot;&gt;5. 웹브라우저로 접근&lt;/h2&gt;
&lt;p&gt;localhost:[local port]로 접근이 가능합니다.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/docker-and-kubernetes-the-complete-guide/&quot;&gt;Udemy, Stephen Grider, Docker and Kubernetes: The Complete Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">목표 도커를 사용하여 컨테이너 기반으로 노드 실행 및 접근</summary></entry><entry><title type="html">02 Spring Boot Jpa</title><link href="http://localhost:4000/2020/03/06/02-spring-boot-jpa/" rel="alternate" type="text/html" title="02 Spring Boot Jpa" /><published>2020-03-06T00:00:00+09:00</published><updated>2020-03-06T00:00:00+09:00</updated><id>http://localhost:4000/2020/03/06/02-spring-boot-jpa</id><content type="html" xml:base="http://localhost:4000/2020/03/06/02-spring-boot-jpa/"></content><author><name>Youngwon Seo</name><email>jazz9008@gmail.com</email></author><summary type="html"></summary></entry><entry><title type="html">메이븐 멀티모듈 SNS 개발 #1 - 프로젝트 구성</title><link href="http://localhost:4000/2020/02/29/01-maven-multi-module/" rel="alternate" type="text/html" title="메이븐 멀티모듈 SNS 개발 #1 - 프로젝트 구성" /><published>2020-02-29T00:00:00+09:00</published><updated>2020-02-29T00:00:00+09:00</updated><id>http://localhost:4000/2020/02/29/01-maven-multi-module</id><content type="html" xml:base="http://localhost:4000/2020/02/29/01-maven-multi-module/">&lt;p&gt;본 포스트는 메이븐 멀티 모듈을 기반으로 스프링 프로젝트들을 구성하고 SNS 서비스를 개발을 합니다.&lt;/p&gt;

&lt;h2 id=&quot;메이븐-멀티-모듈&quot;&gt;메이븐 멀티 모듈&lt;/h2&gt;
&lt;p&gt;프로젝트를 진행하다 보면 단일 프로젝트가 아닌 여러개의 프로젝트로 구성해야할 경우가 많습니다. 특히 마이크로서비스(Microservice)등의 기술로 인해 기존의 front-end와 back-end뿐만 아니라 기능별로 프로젝트를 분리하고 각 모듈별로 배포 및 운영가능하게 만드는 것이 당연시 되고 있습니다.&lt;/p&gt;

&lt;p&gt;스프링 기반으로 정산시스템을 만든다고 생각해 봅시다. 우리는 사용자에게 자신의 요금을 조회할 수 있는 웹 어플리케이션이 필요합니다. 또한 매달 또는 매주 한번씩 실행되는 배치 어플리케이션이 필요하죠. 이는 다음과 같이 표현할 수 있습니다.
&lt;img src=&quot;/public/spring/01-multiple-spring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 여러개의 프로젝트를 구성할 때 각 프로젝트에는 DB에 접근하는 Repository나 비즈니스 로직이 포함된 Service가 포함되는데 이는 중복코드를 발생시킬 위험이 존재합니다(위험이 이라고 포함되었지만 무조건 발생할 수 밖에 없습니다). 즉 동일한 도메인(Entity)이 사용되면 개발시 또는 수정시 copy&amp;amp;paste 신동이 되어야할 수 밖에 없습니다. 이를 해결하기 위해 프로젝트를 분리해야 하는데 다음과 같은 방법을 사용할 수 있습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;공통 로직을 jar로 maven repo나 gradle repo로 배포&lt;/li&gt;
  &lt;li&gt;공통 로직 담은 프로젝트를 IDE의 project explorer환경에서 import&lt;/li&gt;
  &lt;li&gt;메이븐 멀티 모듈로 프로젝트를 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;첫 번째는 방법은 공통을 담고 있는 프로젝트를 구성하고 공통로직을 사용하는 프로젝트에서 maven이나 gradle로 import하는것입니다. 하지만 수정시 매번 재배포하고 import하는 프로젝트들을 테스트해야하는 불편함이 존재합니다. 두 번째 방법은 첫 번째 방법과 세 번째 방법의 사이에 존재하는데 IDE환경에서 프로젝트를 jar로 import해서 사용하는 방법입니다. 세 번째 방법은 같이 사용할 프로젝트를 메이픈 멀티 모듈로 구성해 각 프로젝트들이 동일한 로직이나 도메인을 사용할 때 같은 코드를 사용할 수 있도록 보장받는 것입니다.&lt;/p&gt;

&lt;p&gt;위 프로젝트를 메이븐 멀티 모듈로 구성하면 다음과 같이 표현할 수 있습니다(API를 추가하였습니다).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/spring/02-maven-multi-module.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;본 포스트에서는 메이븐 멀티 모듈 기반의 SNS를 개발해 보겠습니다. 도메인으로 구성된 &lt;strong&gt;module-domain&lt;/strong&gt;과 비즈니스 정보가 포함된 &lt;strong&gt;module-core&lt;/strong&gt;, 사용자가 접근하는 &lt;strong&gt;module-web&lt;/strong&gt;, API를 제공하는 &lt;strong&gt;module-api&lt;/strong&gt;로 구성됩니다.&lt;/p&gt;

&lt;p&gt;자바를 기반으로 프로젝트를 진행하다보면 많은 외부 라이브러리(또는 의존성 : dependency, 보통의 경우 자바기반의 라이브러리 : jar)를 추가적으로 사용하게 됩니다. 이를 효율적으로 관리하는 도구가 메이븐(maven)입니다. 메이븐은 설정(pom.xml)을 저장소에 등록된 라이브러리를 현재 프로젝트에서 사용가능하게 하며 배포나 라이브러리 변경시&lt;/p&gt;

&lt;h4 id=&quot;개발환경&quot;&gt;개발환경&lt;/h4&gt;
&lt;p&gt;초기에 세팅해야하는 항목만 명시합니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Boot&lt;/li&gt;
  &lt;li&gt;JPA&lt;/li&gt;
  &lt;li&gt;STS4(ecplise)&lt;/li&gt;
  &lt;li&gt;lombok&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;프로젝트-구성&quot;&gt;프로젝트 구성&lt;/h2&gt;
&lt;p&gt;최상위 프로젝트는 maven project이고 그 외 내부 프로젝트는 maven module입니다. 모두 simple project로 설정합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;maven-multi-module-sns (상위 프로젝트)
    &lt;ul&gt;
      &lt;li&gt;maven project로 생성&lt;/li&gt;
      &lt;li&gt;create a simple project 체크&lt;/li&gt;
      &lt;li&gt;패키징을 POM으로 선택&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;module-domain (하위 프로젝트1)
    &lt;ul&gt;
      &lt;li&gt;상위 프로젝트에 대한 maven moule로 생성
      * create a simple project 체크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;module-core (하위 프로젝트2)
    &lt;ul&gt;
      &lt;li&gt;상위 프로젝트에 대한 maven moule로 생성&lt;/li&gt;
      &lt;li&gt;create a simple project 체크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;module-api (하위 프로젝트3)
    &lt;ul&gt;
      &lt;li&gt;상위 프로젝트에 대한 maven moule로 생성
      * create a simple project 체크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;module-web (하위 프로젝트3)
    &lt;ul&gt;
      &lt;li&gt;상위 프로젝트에 대한 maven moule로 생성&lt;/li&gt;
      &lt;li&gt;create a simple project 체크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;pom&quot;&gt;POM&lt;/h2&gt;
&lt;p&gt;이번에는 각 프로젝트의 pom.xml을 작성해 봅시다. 일단 가장 미니멀하게 구성합니다.&lt;/p&gt;

&lt;h3 id=&quot;최상위-cms---pomxml&quot;&gt;최상위 CMS - POM.XML&lt;/h3&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2.3.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;relativePath&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.youngwon&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cms&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;pom&lt;span class=&quot;nt&quot;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;packaging이 pom&lt;/li&gt;
  &lt;li&gt;상위(parent)에 spring-boot-starter-parent와 이에 대한 버전이 명시&lt;/li&gt;
  &lt;li&gt;하위 모듈로 core와 web이 존재&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;core---pomxml&quot;&gt;CORE - POM.XML&lt;/h3&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.youngwon&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cms&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-data-jpa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;		
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.h2database&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;h2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;일단 DBMS를 h2로 사용&lt;/li&gt;
  &lt;li&gt;DB를 조작하기 위해 ORM기반의 JPA사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;web---pomxml&quot;&gt;WEB - POM.XML&lt;/h3&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.youngwon&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cms&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; 
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.youngwon&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;	
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;		
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;공통 로직이 포함된 core에 대한 dependency를 추가&lt;/li&gt;
  &lt;li&gt;spring-boot-starter-web을 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;java&quot;&gt;JAVA&lt;/h2&gt;
&lt;p&gt;위에서 각 메이븐 모듈들을 구성하고 각 모듈들의 pom을 작성하였습니다. 마지막으로 자바 코드를 작성해 core와 web의 연동을 확인해 보겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;core---boardservicejava&quot;&gt;CORE - BoardService.java&lt;/h3&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.youngwon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;web&quot;&gt;WEB&lt;/h3&gt;
&lt;h4 id=&quot;applicationjava&quot;&gt;Application.java&lt;/h4&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.youngwon.web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scanBasePackages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;io.youngwon.web&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
 
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;	

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;maincontrollerjava&quot;&gt;MainController.java&lt;/h4&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.youngwon.web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.youngwon.core.BoardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	 
	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MainController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;BoardService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;boardService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
 
  &lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isEvenOrOdd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MainController에 선언된 get(“/”)에 접근시 “hi”가 출력되는 것을 확인 할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;https://spring.io/guides/gs/multi-module/&lt;/li&gt;
  &lt;li&gt;https://www.baeldung.com/spring-boot-multiple-modules&lt;/li&gt;
  &lt;li&gt;https://woowabros.github.io/study/2019/07/01/multi-module.html&lt;/li&gt;
  &lt;li&gt;https://jojoldu.tistory.com/123&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">본 포스트는 메이븐 멀티 모듈을 기반으로 스프링 프로젝트들을 구성하고 SNS 서비스를 개발을 합니다.</summary></entry><entry><title type="html">메이븐 멀티모듈 SNS 개발 #2 - domain과 service</title><link href="http://localhost:4000/2020/02/29/02-maven-multi-module/" rel="alternate" type="text/html" title="메이븐 멀티모듈 SNS 개발 #2 - domain과 service" /><published>2020-02-29T00:00:00+09:00</published><updated>2020-02-29T00:00:00+09:00</updated><id>http://localhost:4000/2020/02/29/02-maven-multi-module</id><content type="html" xml:base="http://localhost:4000/2020/02/29/02-maven-multi-module/">&lt;h2 id=&quot;web-프로젝트&quot;&gt;Web 프로젝트&lt;/h2&gt;
&lt;p&gt;먼저 사용자의 뷰를 담당하는 Web 프로젝트를 구성해 보겠습니다. Web프로젝트는 웹 브라우저를 통해 접근하는 사용자에 대한 entry point입니다. 즉 Front-end에 대한 구현체이며 기본적인 사항은 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring MVC 5&lt;/li&gt;
  &lt;li&gt;Thymeleaf&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 두가지를 사용하기 위해 pom.xml에 두가지에 대한 메이븐 의존성을 추가합니다.&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.youngwon&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cms&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-webmvc&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.5.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.thymeleaf&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;thymeleaf-spring5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.0.11.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dynamic-webproject-설정&quot;&gt;Dynamic webproject 설정&lt;/h3&gt;
&lt;p&gt;위에서 CMS의 하위 모듈로 생성한 web프로젝트를 tomcat으로 기동할 수 있도록 설정해 보겠습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;web프로젝트 우클릭 -&amp;gt; properties 접근&lt;/li&gt;
  &lt;li&gt;Project Facets 접근&lt;/li&gt;
  &lt;li&gt;Convert to faceted from.. 클릭&lt;/li&gt;
  &lt;li&gt;Dynamic Web Module 체크&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Dynamic webproject가 설정이 완료되면 프로젝트의 루트 경로에 WebContent폴더가 추가된 것을 확인할 수 있습니다. WebContent는 web.xml, servlet-context.xml등의 설정 파일과 함께 view에 대한 html파일, javascript 파일들을 담게 됩니다.&lt;/p&gt;

&lt;p&gt;추가적으로 WebContent가 추가되면 properties의 Deployment Assembly에 Source가 /WebContent, Delpoy Path가 / 인 배포경로가 생성됩니다.&lt;/p&gt;

&lt;h3 id=&quot;maven-dependencies&quot;&gt;Maven Dependencies&lt;/h3&gt;
&lt;p&gt;properties의 Deployment Assembly에 Add를 클릭해 Java Build Path Entries -&amp;gt; Maven Dependencies를 추가합니다. 추가를 하지 않으면 ClassNotFountException이 발생하게 됩니다.&lt;/p&gt;

&lt;h3 id=&quot;webxml&quot;&gt;web.xml&lt;/h3&gt;
&lt;p&gt;톰캣과 같은 WAS가 프로젝트를 웹어플리케이션으로 실행하기 위해서는 배포 및 서블릿 스팩 등이 기술된 web.xml 파일이 필수로 필요합니다. 톰캣이 실행할때 web.xml파일을 기반으로 dispatcher 및 기타 속성들에 접근을 시도합니다. web.xml은 WebContent/WEB-INF 의 경로에 생성합니다.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;web-app&lt;/span&gt; 
	&lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3.1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;appServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;/WEB-INF/spring/servlet-context.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;load-on-startup&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/load-on-startup&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;appServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;web.xml을 살펴보면 DispatcherSevlet이 명시되어 있고 contextConfigLocation이 servlet-context.xml로 설정된것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;servlet-contextxml&quot;&gt;servlet-context.xml&lt;/h3&gt;
&lt;p&gt;web.xml을 통해 servlet의 기본설정이 이루어지는 servlet-context의 경로를 명시했습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여기서 사용하는 스프링 구성요소의 위치(context-component-scan)&lt;/li&gt;
  &lt;li&gt;템플릿으로 thymeleaf를 설정&lt;/li&gt;
  &lt;li&gt;컨트롤러에서 템플릿을 반환하기 위해 resolver 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;beans&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:mvc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:tx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:aop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;context:component-scan&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;base-package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;io.youngwon.web&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;characterEncoding&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;templateEngine&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;templateEngine&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;order&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;templateEngine&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;templateResolver&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;templateResolver&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
	
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;templateResolver&quot;&lt;/span&gt; 
		&lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;prefix&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/WEB-INF/views/&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;suffix&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.html&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;templateMode&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HTML5&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;characterEncoding&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
	
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;homecontroller&quot;&gt;HomeController&lt;/h3&gt;
&lt;p&gt;servlet-context.xml에서 프로젝트 스캔에 대한 베이스 패키지로 io.youngwon.web으로 지정하였습니다. 해당 경로에 HomeController를 생성합니다.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.youngwon.web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HomeController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;home&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;html&quot;&gt;HTML&lt;/h3&gt;
&lt;p&gt;servlet의 resolver를 보면 prefix로 /WEB-INF/views/가 지정된것을 확인할 수 있습니다. 해당 경로에 컨트롤러(HomeController)에서 반환된 home에 대한 html파일을 추가합니다.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:th=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.thymeleaf.org&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Welcome!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	안녕하세요
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행을 하고 해당 프로젝트의 / 경로에 접근해 보면 안녕하세요 라는 텍스트가 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;프로젝트-구조&quot;&gt;프로젝트 구조&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/public/spring/08-web-project-structure.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;https://spring.io/guides/gs/multi-module/&lt;/li&gt;
  &lt;li&gt;https://cloud.google.com/appengine/docs/standard/java/config/webxml?hl=ko&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngwon Seo</name></author><summary type="html">Web 프로젝트 먼저 사용자의 뷰를 담당하는 Web 프로젝트를 구성해 보겠습니다. Web프로젝트는 웹 브라우저를 통해 접근하는 사용자에 대한 entry point입니다. 즉 Front-end에 대한 구현체이며 기본적인 사항은 다음과 같습니다. Spring MVC 5 Thymeleaf</summary></entry></feed>